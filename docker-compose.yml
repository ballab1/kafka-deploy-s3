version: '3.5'

services:
    broker:
        command: confluent broker
        container_name: broker
        depends_on:
            - zookeeper
        dns: 10.1.3.1
        dns_search: home
        domainname: home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP:?}
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${HOST_IP:?}:9092
#            KAFKA_ADVERTISED_LISTENERS: SASL_PLAINTEXT://${HOST_IP:?}:9092
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_BOOTSTRAP_SERVERS: $KAFKA_BOOTSTRAP_SERVERS
            KAFKA_BROKER_ID: ${KAFKA_ID:?}
            KAFKA_COMPRESSION_TYPE: gzip
            KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'true'
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_HEAP_OPTS: "-Xmx6G -Xms6G"
            KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=${HOST_IP:?} -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9091 -Dcom.sun.management.jmxremote.port=9091 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dzookeeper.sasl.client=ZkClient"
            KAFKA_JMX_PORT: 9091
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#            KAFKA_LISTENERS: SASL_PLAINTEXT://0.0.0.0:9092
            KAFKA_NUM_PARTITIONS: 1
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_HOSTS:?}
            ZOOKEEPER_TIMEOUT: 6000
        hostname: broker.s3
        image: ${DOCKER_REGISTRY:-ubuntu-s2.home:5000/}${CONTAINER_OS:-alpine}/confluent/${CONFLUENT_VERSION:-5.4.0}:${CONTAINER_TAG:-4e4975d6749dc05b20930effb75421c23f3fad0940c206bf1cc2083dc9605bee}
        logging:
            driver: json-file
            options:
                max-file: "3"
                max-size: "10m"
        links:
           - zookeeper
        networks:
            - kafka-net
        ports:
            - "9091:9091"
            - "9092:9092"
        restart: unless-stopped
        volumes:
            - ./kafka-broker/data:/usr/local/kafka/data
            - ./kafka-broker/logs:/usr/local/kafka/logs
            - ./kafka-broker/log:/var/log


    zookeeper:
        command: confluent zookeeper
        container_name: zookeeper
        dns: 10.1.3.1
        dns_search: home
        domainname: home
        environment:
            DEBUG_TRACE: ${DEBUG_TRACE:-0}
            KAFKA_BOOTSTRAP_SERVERS: $KAFKA_BOOTSTRAP_SERVERS
            KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=${HOST_IP} -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=1299 -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
#            ZOOKEEPER_CONF_DIR: /usr/local/kafka/conf
#            ZOOKEEPER_DATA_DIR: /usr/local/kafka/data
#            ZOOKEEPER_HOME_DIR: /usr/local/kafka
#            ZOOKEEPER_LOG_DIR: /usr/local/kafka/logs
            ZOOKEEPER_MY_ID: 9999
            ZOOKEEPER_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
            ZOOKEEPER_INIT_LIMIT: 10
            ZOOKEEPER_SYNC_LIMIT: 5
            ZOOKEEPER_USER_NAME: zookeeper
#            ZOOKEEPER_USER_DIR: /usr/local/kafka
        hostname: zookeeper.s3
        image: ${DOCKER_REGISTRY:-ubuntu-s2.home:5000/}${CONTAINER_OS:-alpine}/confluent/${CONFLUENT_VERSION:-5.4.0}:${CONTAINER_TAG:-4e4975d6749dc05b20930effb75421c23f3fad0940c206bf1cc2083dc9605bee}
        logging:
            driver: json-file
            options:
                max-size: "10m"
                max-file: "3"
        networks:
            - kafka-net
        ports:
            - "2181:2181"
        restart: unless-stopped
        volumes:
            - ./kafka-zookeeper/data:/usr/local/kafka/data
            - ./kafka-zookeeper/logs:/usr/local/kafka/logs 
            - ./kafka-zookeeper/log:/var/log

        networks:
            - kafka-net

networks:
    kafka-net:
        name: kafka-container-net
